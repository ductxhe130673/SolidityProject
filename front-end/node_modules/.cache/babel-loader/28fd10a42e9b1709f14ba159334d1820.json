{"remainingRequest":"D:\\projectFPT\\SolidityProject\\front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\projectFPT\\SolidityProject\\front-end\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\projectFPT\\SolidityProject\\front-end\\src\\services\\auth.js","dependencies":[{"path":"D:\\projectFPT\\SolidityProject\\front-end\\src\\services\\auth.js","mtime":1634825887926},{"path":"D:\\projectFPT\\SolidityProject\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectFPT\\SolidityProject\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\projectFPT\\SolidityProject\\front-end\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/projectFPT/SolidityProject/front-end/src/services/auth.js"],"names":["axios","ResponseWrapper","ErrorWrapper","$store","$router","API_URL","BEARER","AuthService","username","password","post","useCredentails","response","_setAuthData","accessToken","data","exp","_parseTokenData","push","name","catch","email","console","log","currentUserId","state","user","currentUser","id","code","_resetAuthData","accessTokenExpDate","auth","nowTime","Math","floor","Date","getTime","Boolean","localStorage","getItem","status","includes","Error","setItem","inner","ms","timer","resolves","clearTimeout","setTimeout","result","forEach","r","Promise","resolve","_debounce","refreshTokens","payload","tokenData","split","JSON","parse","atob","error","commit","setRefreshToken","setBearer","makeLogin","pass","Username","Pwd","req","getAccessToken","userDetail","Password","realname","Realname","role"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\n/* import { Http } from './http.js' */\r\nimport { ResponseWrapper, ErrorWrapper } from './base.js'\r\nimport $store from '../store'\r\nimport $router from '../router'\r\n\r\nimport { API_URL } from '../.env'\r\n\r\nlet BEARER = ''\r\n\r\nexport class AuthService {\r\n  /**\r\n   ******************************\r\n   * @API\r\n   ******************************\r\n   */\r\n  \r\n  static async makeLogin ({ username, password }) {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/login`,{username, password}, {useCredentails: true})\r\n      _setAuthData({\r\n        accessToken: response.data.accessToken,\r\n        exp: _parseTokenData(response.data.accessToken).exp\r\n      })\r\n      return new ResponseWrapper(response, response.data)\r\n    } catch (error) {\r\n      throw new ErrorWrapper(error)\r\n    }\r\n  }\r\n\r\n  static async makeLogout() {\r\n    try {\r\n      /* const response = await new Http({ auth: true }).post('auth/logout', {}, { useCredentails: true }) */\r\n      // _resetAuthData()\r\n\r\n      $router.push({ name: 'Login' }).catch(() => { })\r\n      /* return new ResponseWrapper(response, response.data) */\r\n    } catch (error) {\r\n      throw new ErrorWrapper(error)\r\n    }\r\n  }\r\n\r\n  static async makeRegister({ username, email, password }) {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/auth/register`,\r\n        { username, email, password }, { useCredentails: true })\r\n      console.log(response)\r\n      return new ResponseWrapper(response, response.data)\r\n    } catch (error) {\r\n      throw new ErrorWrapper(error)\r\n    }\r\n  }\r\n\r\n\r\n  static async refreshTokens() {\r\n    try {\r\n      var currentUserId = $store.state.user.currentUser.id\r\n      const response = await axios.post(`${API_URL}/auth/refresh-tokens`, { currentUserId }, { useCredentails: true })\r\n      _setAuthData({\r\n        accessToken: response.data.accessToken,\r\n        exp: _parseTokenData(response.data.accessToken).exp\r\n      })\r\n      return new ResponseWrapper(response, response.data)\r\n    } catch (error) {\r\n      console.log(error.response.data.code)\r\n      _resetAuthData()\r\n      $router.push({ name: 'Login' }).catch(() => { })\r\n      throw new ErrorWrapper(error)\r\n    }\r\n  }\r\n\r\n  static debounceRefreshTokens = this._debounce(() => {\r\n    return this.refreshTokens()\r\n  }, 100)\r\n\r\n  /**\r\n   ******************************\r\n   * @METHODS\r\n   ******************************\r\n   */\r\n\r\n  static isAccessTokenExpired() {\r\n    const accessTokenExpDate = $store.state.auth.accessTokenExpDate - 10\r\n    const nowTime = Math.floor(new Date().getTime() / 1000)\r\n\r\n    return accessTokenExpDate <= nowTime\r\n  }\r\n\r\n  static hasRefreshToken() {\r\n    return Boolean(localStorage.getItem('refreshToken'))\r\n  }\r\n\r\n  static setRefreshToken(status) {\r\n    if (!['', 'true'].includes(status)) {\r\n      throw new Error(`setRefreshToken: invalid value ${status}; Expect one of ['', 'true']`)\r\n    }\r\n\r\n    localStorage.setItem('refreshToken', status)\r\n  }\r\n\r\n  static getBearer() {\r\n    return BEARER\r\n  }\r\n\r\n  static setBearer(accessToken) {\r\n    BEARER = `${accessToken}`\r\n  }\r\n\r\n  /*\r\n   *tham khảo https://stackoverflow.com/questions/35228052/debounce-function-implemented-with-promises\r\n   */\r\n  static _debounce(inner, ms = 0) {\r\n    let timer = null\r\n    let resolves = []\r\n\r\n    return function () {\r\n      clearTimeout(timer)\r\n      timer = setTimeout(() => {\r\n        const result = inner()\r\n        resolves.forEach(r => r(result))\r\n        resolves = []\r\n      }, ms)\r\n\r\n      return new Promise(resolve => resolves.push(resolve))\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n ******************************\r\n * @private_methods\r\n ******************************\r\n */\r\n\r\nfunction _parseTokenData(accessToken) {\r\n  let payload = ''\r\n  let tokenData = {}\r\n\r\n  try {\r\n    payload = accessToken.split('.')[1]\r\n    tokenData = JSON.parse(atob(payload))\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n\r\n  return tokenData\r\n}\r\n\r\nfunction _resetAuthData() {\r\n  // reset userData\r\n  $store.commit('user/SET_CURRENT_USER', {})\r\n  $store.commit('auth/SET_ATOKEN_EXP_DATE', null)\r\n\r\n  // reset pageData\r\n  $store.commit('data/resetAll')\r\n  $store.commit('views/resetAll')\r\n  // reset tokens\r\n  AuthService.setRefreshToken('')\r\n  AuthService.setBearer('')\r\n}\r\n\r\nfunction _setAuthData({ accessToken, exp } = {}) {\r\n  console.log(accessToken)\r\n  console.log(exp)\r\n  AuthService.setRefreshToken('true')\r\n  AuthService.setBearer(accessToken)\r\n  $store.commit('auth/SET_ATOKEN_EXP_DATE', exp)\r\n}\r\n\r\n/*----------------- Login----------------- */\r\nexport async function makeLogin(user, pass) {\r\n  const req = await axios.post('/Login', {\r\n    Username: user,\r\n    Pwd: pass\r\n  })\r\n  return req\r\n}\r\n\r\nexport async function getAccessToken(userDetail) {\r\n  try {\r\n    const req = await axios.post('/accesstoken', {\r\n      id: userDetail.id,\r\n      username: userDetail.Username,\r\n      password: userDetail.Password,\r\n      realname: userDetail.Realname,\r\n      role: userDetail.role\r\n    })\r\n    return new ResponseWrapper(req, req.data)\r\n  } catch (error) {\r\n    return new ErrorWrapper(error)\r\n  }\r\n}\r\n"]}]}