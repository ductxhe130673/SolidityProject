{"remainingRequest":"D:\\projectFPT\\SolidityProject\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectFPT\\SolidityProject\\front-end\\src\\views\\choose-property\\CheckGeneralVul\\GenaralVulSetting.vue?vue&type=style&index=0&id=4d5581ff&scoped=true&lang=css&","dependencies":[{"path":"D:\\projectFPT\\SolidityProject\\front-end\\src\\views\\choose-property\\CheckGeneralVul\\GenaralVulSetting.vue","mtime":1634825887953},{"path":"D:\\projectFPT\\SolidityProject\\front-end\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectFPT\\SolidityProject\\front-end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\projectFPT\\SolidityProject\\front-end\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\projectFPT\\SolidityProject\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectFPT\\SolidityProject\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCiNjb250YWluZXIgew0KICBoZWlnaHQ6IDEwMCU7DQogIHdpZHRoOiAxMDAlOw0KfQ0KI2Nvbi1zZXR0aW5nIHsNCiAgd2lkdGg6IDcwJTsNCn0NCiNoZWFkZXIgew0KICBtYXJnaW4tdG9wOiAxJTsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBmb250LXNpemU6IDM1cHg7DQogIGZvbnQtd2VpZ2h0OiBib2xkOw0KfQ0KLnJvdyB7DQogIG1hcmdpbi10b3A6IDIwcHg7DQp9DQouY29sLTIgew0KICBmb250LXNpemU6IDIwcHg7DQp9DQp0ZXh0YXJlYSB7DQogIGhlaWdodDogYXV0bzsNCn0NCiNidG4tZ3JvdXAgew0KICAvKiB3aWR0aDogMTAwJTsgKi8NCiAgcGFkZGluZy1ib3R0b206IDUlOw0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIG1hcmdpbi10b3A6IDI1cHg7DQogIG1hcmdpbi1ib3R0b206IDE1cHg7DQp9DQpidXR0b24gew0KICBtYXJnaW46IGF1dG87DQogIGN1cnNvcjogcG9pbnRlcjsNCiAgd2lkdGg6IDE1JTsNCiAgaGVpZ2h0OiAyJTsNCiAgYm9yZGVyOiAxcHggc29saWQgIzIxOTZmMzsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBjb2xvcjogIzIxOTZmMzsNCiAgZm9udC1zaXplOiAxM3B4Ow0KICBsaW5lLWhlaWdodDogMjJweDsNCiAgZm9udC13ZWlnaHQ6IDYwMDsNCiAgcGFkZGluZzogNHB4IDNweDsNCiAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICBjdXJzb3I6IHBvaW50ZXI7DQp9DQojaGlnaGxpZ2h0aW5nLWNvbnRlbnQgew0KICBtYXJnaW46IDEwcHg7DQogIHBhZGRpbmc6IDEwcHg7DQogIGJvcmRlcjogMDsNCiAgd2lkdGg6IGNhbGMoMTAwJSAtIDMycHgpOw0KICBoZWlnaHQ6IDE1MHB4Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2Ow0KICBmb250LXNpemU6IDE1cHQ7DQogIGZvbnQtZmFtaWx5OiBub3JtYWwgbm9ybWFsIDFlbS8xLjJlbSBtb25vc3BhY2U7DQogIGxpbmUtaGVpZ2h0OiAyMHB0Ow0KICBvdmVyZmxvdzogYXV0bzsNCiAgd2hpdGUtc3BhY2U6IHByZTsNCn0NCiNzZWxlY3Rpb24tdGFibGUgew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDEwMCU7DQogIHRvcDogMDsNCiAgbGVmdDogMDsNCiAgei1pbmRleDogMTAwMDsNCiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpOw0KICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3M7DQp9DQojc2VsZWN0aW9uLXRhYmxlLWIyIHsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICBoZWlnaHQ6IDU1MHB4Ow0KICB3aWR0aDogMTAwMHB4Ow0KICBib3JkZXItcmFkaXVzOiAxMHB4Ow0KICB0b3A6IDYwcHg7DQogIGxlZnQ6IGNhbGMoNTAlIC0gNTAwcHgpOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsNCn0NCg=="},{"version":3,"sources":["GenaralVulSetting.vue"],"names":[],"mappingsfile":"GenaralVulSetting.vue","sourceRoot":"src/views/choose-property/CheckGeneralVul","sourcesContent":["<template>\r\n  <div class=\"container\" id=\"add-vul\">\r\n    <div id=\"header\">General Vulnerability Setting</div>\r\n    <div class=\"row\">\r\n      <div class=\"col-2\">Vulnerability</div>\r\n      <div class=\"col-9\">\r\n        <select\r\n          name=\"lteid\"\r\n          class=\"form-select\"\r\n          @change=\"changeid($event.target.value)\"\r\n        >\r\n          <option v-for=\"c in ltltemplate\" :key=\"c.lteid\" :value=\"c.lteid\">\r\n            {{ c.name }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-2\">Formular</div>\r\n      <div class=\"col-9\">\r\n        <div\r\n          class=\"language-ltl\"\r\n          id=\"highlighting-content\"\r\n          spellcheck=\"false\"\r\n          contenteditable=\"\"\r\n          @input=\"updateInput\"\r\n          @keydown.enter.prevent=\"keyEnter\"\r\n          @keydown.tab.prevent=\"keyTab\"\r\n        ></div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-2\">Description</div>\r\n      <div class=\"col-10\">\r\n        <textarea name=\"\" id=\"\" cols=\"30\" rows=\"5\" class=\"form-control\" v-model=\"description\">\r\n           \r\n          </textarea\r\n        >\r\n      </div>\r\n    </div>\r\n    <div id=\"btn-group\">\r\n      <button class=\"btn btn-primary-outline btn-sm\" @click=\"routing('add')\">\r\n        Add\r\n      </button>\r\n      <button\r\n        class=\"btn btn-primary-outline btn-sm\"\r\n        type=\"button\"\r\n        @click=\"routing('back')\"\r\n      >\r\n        Cancel\r\n      </button>\r\n    </div>\r\n    <div id=\"selection-table\" v-if=\"isSelectVariable\">\r\n      <div id=\"selection-table-b2\">\r\n        <ArgumentSelection\r\n          v-if=\"getVariableType == 'arg'\"\r\n          :current_value=\"getSelectVariableValue\"\r\n          @updateCurrentSelectVariable=\"updateSelection\"\r\n        />\r\n        <VariableSelection\r\n          v-if=\"getVariableType == 'var'\"\r\n          :current_value=\"getSelectVariableValue\"\r\n          @updateCurrentSelectVariable=\"updateSelection\"\r\n        />\r\n        <FunctionSelection\r\n          v-if=\"getVariableType == 'func'\"\r\n          :current_value=\"getSelectVariableValue\"\r\n          @updateCurrentSelectVariable=\"updateSelection\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { analyseLTLCode } from \"../../../mixins/text-parser.js\";\r\nimport ArgumentSelection from \"../../../components/ArgumentTable.vue\";\r\nimport VariableSelection from \"../../../components/VarialbleTable.vue\";\r\nimport FunctionSelection from \"../../../components/FunctionTable.vue\";\r\nimport { GetAllltltemplates } from \"../../../services/data\";\r\nexport default {\r\n  data: function () {\r\n    return {\r\n      selectVariable: false,\r\n      select_variable_value: \"\",\r\n      select_variable_id: \"\",\r\n      select_variable_type: \"\",\r\n      selected_template: \"\",\r\n      ltlcode:\"abc\",\r\n      ltltemplate: [],\r\n      description: \"\",\r\n    };\r\n  },\r\n  components: { ArgumentSelection, VariableSelection, FunctionSelection },\r\n  mounted() {\r\n    this.initData();\r\n    this.updateContent(1, this.ltlcode);\r\n  },\r\n  watch: {\r\n    selected_template: function (val) {\r\n      if (val == \"interger_overflow_underflow\") {\r\n        this.updateContent(1, this.ltlcode);\r\n      } else {\r\n        this.updateContent(1, \"\");\r\n      }\r\n    },\r\n    ltlcode: function (newVal){\r\n      this.updateContent(1,newVal);\r\n    } \r\n   \r\n  },\r\n  computed: {\r\n    isSelectVariable() {\r\n      return this.selectVariable;\r\n    },\r\n    getSelectVariableValue() {\r\n      return this.select_variable_value;\r\n    },\r\n    getVariableType() {\r\n      return this.select_variable_type;\r\n    },\r\n  },\r\n  methods: {\r\n    async initData() {\r\n      this.ltltemplate = await GetAllltltemplates();\r\n      this.ltlcode =  this.ltltemplate[0].formula;\r\n      this.description =  this.ltltemplate[0].description;\r\n    },\r\n    changeid(value) {\r\n      const data = this.ltltemplate.find((i) => {\r\n        return i.lteid == value;\r\n      });\r\n      this.ltlcode= data.formula;\r\n      this.description = data.description;\r\n    },\r\n    routing(param) {\r\n      /* let ltl_content = this.getNodeValue() ltl content se duoc gui ve phia backend*/\r\n      if (param == \"add\") {\r\n        this.$router.push({ name: \"ChooseElementOfSmartContract\" });\r\n      }\r\n      if (param == \"back\") {\r\n        this.$router.push({ name: \"CSPSettingType\" });\r\n      }\r\n    },\r\n    updateSelection(new_value) {\r\n      if (new_value != \"\") {\r\n        let elemnet = document.getElementById(this.select_variable_id);\r\n        elemnet.innerText = new_value;\r\n      }\r\n      this.select_variable_id = \"\";\r\n      this.select_variable_value = \"\";\r\n      this.select_variable_type = \"\";\r\n      this.selectVariable = false;\r\n    },\r\n    openSelectTable(id, value, type) {\r\n      this.select_variable_value = value.substring(1, value.length - 1);\r\n      this.select_variable_id = id;\r\n      if (type != \"\") {\r\n        this.select_variable_type = type;\r\n      } else {\r\n        this.select_variable_type = \"var\";\r\n      }\r\n      this.selectVariable = true;\r\n    },\r\n    removeSelectVarEventListener() {\r\n      var userSelection = document.getElementsByClassName(\"select-variable\");\r\n      var self = this;\r\n      for (var i = 0; i < userSelection.length; i++) {\r\n        (function (index) {\r\n          userSelection[index].removeEventListener(\"click\", function (event) {\r\n            self.openSelectTable(\r\n              event.target.id,\r\n              event.target.innerHTML,\r\n              event.target.type\r\n            );\r\n          });\r\n        })(i);\r\n      }\r\n    },\r\n    addSelectVarEventListener() {\r\n      var userSelection = document.getElementsByClassName(\"select-variable\");\r\n      var self = this;\r\n      for (var i = 0; i < userSelection.length; i++) {\r\n        (function (index) {\r\n          userSelection[index].setAttribute(\"id\", \"select_var_\" + i);\r\n          userSelection[index].addEventListener(\"click\", function (event) {\r\n            self.openSelectTable(\r\n              event.target.id,\r\n              event.target.innerHTML,\r\n              event.target.type\r\n            );\r\n          });\r\n        })(i);\r\n      }\r\n    },\r\n    updateContent(pos, value) {\r\n      let result_element = document.getElementById(\"highlighting-content\");\r\n      this.removeSelectVarEventListener();\r\n      result_element.innerHTML = analyseLTLCode(value);\r\n      this.setCursor(pos);\r\n      this.addSelectVarEventListener();\r\n    },\r\n    getNodeValue() {\r\n      let result_element = document.getElementById(\"highlighting-content\");\r\n      let childs = result_element.childNodes;\r\n      let all_text = [];\r\n      for (let i = 0; i < childs.length; ++i) {\r\n        if (childs[i]) {\r\n          if (childs[i].nodeType != 3) {\r\n            let value = childs[i].innerHTML;\r\n            all_text.push(value);\r\n          } else {\r\n            all_text.push(childs[i].data);\r\n          }\r\n        }\r\n      }\r\n      return all_text\r\n        .join(\"\")\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\");\r\n    },\r\n    updateInput() {\r\n      let value = this.getNodeValue();\r\n      let pos = this.getCursorPos();\r\n      if (value.length == 0 && pos == 0) {\r\n        value = \" \";\r\n        pos = 1;\r\n      }\r\n      this.updateContent(pos, value);\r\n    },\r\n    keyEnter() {\r\n      let value = this.getNodeValue();\r\n      let pos = this.getCursorPos();\r\n      value =\r\n        value.substring(0, pos) + \"\\n \" + value.substring(pos, value.length);\r\n      this.updateContent(pos + 1, value);\r\n    },\r\n    keyTab() {\r\n      let value = this.getNodeValue();\r\n      let pos = this.getCursorPos();\r\n      value =\r\n        value.substring(0, pos) + \"\\t\" + value.substring(pos, value.length);\r\n      this.updateContent(pos + 1, value);\r\n    },\r\n    getCursorPos() {\r\n      let selection = window.getSelection();\r\n      let range = selection.getRangeAt(0);\r\n      range.setStartBefore(\r\n        document.getElementById(\"highlighting-content\").parentNode\r\n      );\r\n      let pos = range.toString().split(\"\").length;\r\n      range.collapse(false);\r\n      return pos;\r\n    },\r\n    setCursor(pos) {\r\n      pos += 1;\r\n      let selection = window.getSelection();\r\n      for (let position = 1; position < pos; position++) {\r\n        selection.modify(\"move\", \"right\", \"character\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#container {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n#con-setting {\r\n  width: 70%;\r\n}\r\n#header {\r\n  margin-top: 1%;\r\n  text-align: center;\r\n  font-size: 35px;\r\n  font-weight: bold;\r\n}\r\n.row {\r\n  margin-top: 20px;\r\n}\r\n.col-2 {\r\n  font-size: 20px;\r\n}\r\ntextarea {\r\n  height: auto;\r\n}\r\n#btn-group {\r\n  /* width: 100%; */\r\n  padding-bottom: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 25px;\r\n  margin-bottom: 15px;\r\n}\r\nbutton {\r\n  margin: auto;\r\n  cursor: pointer;\r\n  width: 15%;\r\n  height: 2%;\r\n  border: 1px solid #2196f3;\r\n  text-align: center;\r\n  color: #2196f3;\r\n  font-size: 13px;\r\n  line-height: 22px;\r\n  font-weight: 600;\r\n  padding: 4px 3px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n#highlighting-content {\r\n  margin: 10px;\r\n  padding: 10px;\r\n  border: 0;\r\n  width: calc(100% - 32px);\r\n  height: 150px;\r\n  background-color: #f6f6f6;\r\n  font-size: 15pt;\r\n  font-family: normal normal 1em/1.2em monospace;\r\n  line-height: 20pt;\r\n  overflow: auto;\r\n  white-space: pre;\r\n}\r\n#selection-table {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  transition: opacity 0.3s;\r\n}\r\n#selection-table-b2 {\r\n  position: absolute;\r\n  height: 550px;\r\n  width: 1000px;\r\n  border-radius: 10px;\r\n  top: 60px;\r\n  left: calc(50% - 500px);\r\n  background-color: white;\r\n}\r\n</style>"]}]}